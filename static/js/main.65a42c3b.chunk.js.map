{"version":3,"sources":["CustomDiagram/model-example.js","CustomDiagram/task/component.js","CustomDiagram/task/icon.js","CustomDiagram/event/component.js","CustomDiagram/config-example.js","CustomDiagram/event/icon.js","CustomDiagram/index.js","App.js","registerServiceWorker.js","index.js"],"names":["model","id","type","width","height","x","y","name","linksTo","target","edited","label","points","TaskStyle","style","div","props","isEditing","Name","span","EditName","textarea","Task","value","onChange","refreshName","onKeyDown","handleKeyPress","innerRef","handleRef","display","onDoubleClick","toggleEdit","TaskComponent","state","setTimeout","focus","setState","ev","currentTarget","key","setName","this","React","PureComponent","icon","path","d","size","EventStyle","Event","EventComponent","config","entityTypes","gridSize","customEntities","component","taskIcon","CustomDiagram","diagramStore","dispatch","setConfig","setEntities","diagramOn","entityState","console","info","App","className","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.65a42c3b.chunk.js","sourcesContent":["// @flow\r\n\r\nimport type { EntityState } from '../../src/entity/reducer';\r\n\r\n// TODO: I could potentially have a situation where the model for a link only\r\n// has a `target` property and the entity reducer figures out the proper values\r\n// of `points` when SETting the diagram. In this way I'd had a mix of\r\n// declarative in the inital model and then switch to explicit after load.\r\n\r\nconst model: EntityState = [\r\n  {\r\n    id: 'ja1lnjvx',\r\n    type: 'Task',\r\n    width: 125,\r\n    height: 75,\r\n    x: 50,\r\n    y: 75,\r\n    name: 'Gorilla',\r\n    linksTo: [\r\n      {\r\n        target: 'ja1lnkqu',\r\n        edited: false,\r\n        label: 'Is friends with',\r\n        points: [\r\n          {\r\n            x: 112.5,\r\n            y: 112.5,\r\n          },\r\n          {\r\n            x: 475,\r\n            y: 112.5,\r\n          },\r\n          {\r\n            x: 475,\r\n            y: 150,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        target: 'ja1lnq90',\r\n        edited: true,\r\n        label: 'Eats',\r\n        points: [\r\n          {\r\n            x: 112.5,\r\n            y: 150,\r\n          },\r\n          {\r\n            x: 112.5,\r\n            y: 234.5,\r\n          },\r\n          {\r\n            x: 212.5,\r\n            y: 234.5,\r\n          },\r\n          {\r\n            x: 212.5,\r\n            y: 325,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 'ja1lnkqu',\r\n    type: 'Event',\r\n    width: 50,\r\n    height: 50,\r\n    x: 450,\r\n    y: 150,\r\n    name: 'Toucan',\r\n    linksTo: [\r\n      {\r\n        target: 'ja1lnx2u',\r\n        edited: false,\r\n        points: [\r\n          {\r\n            x: 475,\r\n            y: 175,\r\n          },\r\n          {\r\n            x: 393.75,\r\n            y: 175,\r\n          },\r\n          {\r\n            x: 393.75,\r\n            y: 212.5,\r\n          },\r\n          {\r\n            x: 375,\r\n            y: 212.5,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 'ja1lnq90',\r\n    type: 'Task',\r\n    width: 125,\r\n    height: 75,\r\n    x: 150,\r\n    y: 325,\r\n    name: 'Zebra',\r\n  },\r\n  {\r\n    id: 'ja1lnx2u',\r\n    type: 'Task',\r\n    width: 125,\r\n    height: 75,\r\n    x: 250,\r\n    y: 175,\r\n    name: 'Jiraffe',\r\n  },\r\n];\r\n\r\nexport default model;\r\n","// @flow\r\n\r\nimport React from 'react';\r\nimport style from 'styled-components';\r\n\r\nimport type { DiagComponentProps } from 'react-flow-diagram';\r\n\r\n/*\r\n * Presentational\r\n * ==================================== */\r\n\r\nconst TaskStyle = style.div`\r\n  background-color: #fff;\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  align-items: ${props => (props.isEditing ? 'stretch' : 'center')};\r\n  width: ${props => props.width}px;\r\n  height: ${props => props.height}px;\r\n  border-radius: .5rem;\r\n  border: 2px solid #888;\r\n`;\r\n\r\nconst Name = style.span`\r\n  flex: 1 0;\r\n  padding: .5em;\r\n  font-size: .8rem;\r\n`;\r\n\r\nconst EditName = style.textarea`\r\n  padding: .5em;\r\n  font-size: .8rem;\r\n  text-align: center;\r\n  resize: none;\r\n  border: none;\r\n  border-radius: .5rem;\r\n`;\r\n\r\nexport type TaskProps = DiagComponentProps & {\r\n  name: string,\r\n  isEditing: boolean,\r\n  toggleEdit: boolean => void,\r\n  refreshName: (SyntheticEvent<HTMLTextAreaElement>) => void,\r\n  handleKeyPress: (SyntheticKeyboardEvent<HTMLTextAreaElement>) => void,\r\n  handleRef: HTMLTextAreaElement => void,\r\n};\r\nconst Task = (props: TaskProps) => (\r\n  <TaskStyle\r\n    width={props.model.width}\r\n    height={props.model.height}\r\n    isEditing={props.isEditing}\r\n  >\r\n    <EditName\r\n      value={props.name}\r\n      onChange={props.refreshName}\r\n      onKeyDown={props.handleKeyPress}\r\n      innerRef={textarea => props.handleRef(textarea)}\r\n      style={{ display: props.isEditing ? 'block' : 'none' }}\r\n    />\r\n    <Name\r\n      onDoubleClick={() => props.toggleEdit(true)}\r\n      style={{ display: !props.isEditing ? 'block' : 'none' }}\r\n    >\r\n      {props.model.name}\r\n    </Name>\r\n  </TaskStyle>\r\n);\r\n\r\n/*\r\n * Container\r\n * ==================================== */\r\n\r\ntype TaskComponentProps = DiagComponentProps;\r\ntype TaskComponentState = {\r\n  isEditing: boolean,\r\n  name: string,\r\n};\r\nclass TaskComponent extends React.PureComponent<\r\n  TaskComponentProps,\r\n  TaskComponentState\r\n> {\r\n  textarea: ?HTMLTextAreaElement;\r\n\r\n  state = {\r\n    isEditing: false,\r\n    name: this.props.model.name,\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.textarea = null;\r\n  }\r\n\r\n  handleRef = (textarea: HTMLTextAreaElement) => {\r\n    if (!this.textarea) {\r\n      this.textarea = textarea;\r\n    }\r\n  };\r\n\r\n  toggleEdit = (isEditing: boolean) => {\r\n    const { textarea } = this;\r\n    if (isEditing && textarea) {\r\n      setTimeout(() => textarea.focus(), 16 * 4);\r\n    }\r\n    this.setState({ isEditing });\r\n  };\r\n\r\n  refreshName = (ev: SyntheticEvent<HTMLTextAreaElement>) => {\r\n    this.setState({ name: ev.currentTarget.value });\r\n  };\r\n\r\n  handleKeyPress = (ev: SyntheticKeyboardEvent<HTMLTextAreaElement>) => {\r\n    switch (ev.key) {\r\n      case 'Enter':\r\n        this.toggleEdit(false);\r\n        this.props.setName({ id: this.props.model.id, name: this.state.name });\r\n        break;\r\n      case 'Escape':\r\n        this.toggleEdit(false);\r\n        this.setState({ name: this.props.model.name });\r\n        break;\r\n      // no default\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n      <Task\r\n        {...this.props}\r\n        isEditing={this.state.isEditing}\r\n        name={this.state.name}\r\n        toggleEdit={this.toggleEdit}\r\n        refreshName={this.refreshName}\r\n        handleKeyPress={this.handleKeyPress}\r\n        handleRef={this.handleRef}\r\n      />\r\n        <button>TEST</button>\r\n        <select name=\"\" id=\"\">\r\n          <option value=\"\">Select some action</option>\r\n          <option value=\"\">Select some action</option>\r\n          <option value=\"\">Select some action</option>\r\n        </select>\r\n\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskComponent;\r\n","// @flow\r\n\r\nimport React from 'react';\r\n\r\nconst icon = {\r\n  path: (\r\n    <path d=\"M14 0H2C1 0 0 1 0 2v12c0 1 1 2 2 2h12c1 0 2-1 2-2V2c0-1-1-2-2-2z\" />\r\n  ),\r\n  size: 16,\r\n};\r\n\r\nexport default icon;\r\n","// @flow\r\n\r\nimport React from 'react';\r\nimport style from 'styled-components';\r\n\r\nimport type { DiagComponentProps } from 'react-flow-diagram';\r\n\r\n/*\r\n * Presentational\r\n * ==================================== */\r\n\r\nconst EventStyle = style.div`\r\n  background-color: #fff;\r\n  display: flex;\r\n  position: relative;\r\n  flex-flow: row nowrap;\r\n  align-items: center;\r\n  width: ${props => props.width}px;\r\n  height: ${props => props.height}px;\r\n  border-radius: 77rem;\r\n  border: 2px solid #888;\r\n  justify-content: center;\r\n  font-size: .5rem;\r\n`;\r\n\r\nconst Name = style.span`\r\n  position: absolute;\r\n  top: 100%;\r\n  width: 200%;\r\n  padding: .5em;\r\n  font-size: .8rem;\r\n`;\r\n\r\nconst EditName = style.textarea`\r\n  position: absolute;\r\n  top: 100%;\r\n  width: 200%;\r\n  padding: .5em;\r\n  border: none;\r\n  font-size: .8rem;\r\n  text-align: center;\r\n  border-radius: .1rem;\r\n  resize: none;\r\n  z-index: 10;\r\n  background-color: rgba(255, 255, 255, 0.8);\r\n`;\r\n\r\nexport type EventProps = DiagComponentProps & {\r\n  name: string,\r\n  isEditing: boolean,\r\n  toggleEdit: boolean => void,\r\n  refreshName: (SyntheticEvent<HTMLTextAreaElement>) => void,\r\n  handleKeyPress: (SyntheticKeyboardEvent<HTMLTextAreaElement>) => void,\r\n  handleRef: HTMLTextAreaElement => void,\r\n};\r\nconst Event = (props: EventProps) => (\r\n  <EventStyle width={props.model.width} height={props.model.height}>\r\n    <EditName\r\n      value={props.name}\r\n      onChange={props.refreshName}\r\n      onKeyDown={props.handleKeyPress}\r\n      innerRef={textarea => props.handleRef(textarea)}\r\n      style={{ display: props.isEditing ? 'block' : 'none' }}\r\n    />\r\n    <Name\r\n      onDoubleClick={() => props.toggleEdit(true)}\r\n      style={{ display: !props.isEditing ? 'block' : 'none' }}\r\n    >\r\n      {props.model.name}\r\n    </Name>\r\n  </EventStyle>\r\n);\r\n\r\n/*\r\n * Container\r\n * ==================================== */\r\n\r\ntype EventComponentProps = DiagComponentProps;\r\ntype EventComponentState = {\r\n  isEditing: boolean,\r\n  name: string,\r\n};\r\nclass EventComponent extends React.PureComponent<\r\n  EventComponentProps,\r\n  EventComponentState\r\n> {\r\n  textarea: ?HTMLTextAreaElement;\r\n\r\n  state = {\r\n    isEditing: false,\r\n    name: this.props.model.name,\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.textarea = null;\r\n  }\r\n\r\n  handleRef = (textarea: HTMLTextAreaElement) => {\r\n    if (!this.textarea) {\r\n      this.textarea = textarea;\r\n    }\r\n  };\r\n\r\n  toggleEdit = (isEditing: boolean) => {\r\n    const { textarea } = this;\r\n    if (isEditing && textarea) {\r\n      setTimeout(() => textarea.focus(), 16 * 4);\r\n    }\r\n    this.setState({ isEditing });\r\n  };\r\n\r\n  refreshName = (ev: SyntheticEvent<HTMLTextAreaElement>) => {\r\n    this.setState({ name: ev.currentTarget.value });\r\n  };\r\n\r\n  handleKeyPress = (ev: SyntheticKeyboardEvent<HTMLTextAreaElement>) => {\r\n    switch (ev.key) {\r\n      case 'Enter':\r\n        this.toggleEdit(false);\r\n        this.props.setName({ id: this.props.model.id, name: this.state.name });\r\n        break;\r\n      case 'Escape':\r\n        this.toggleEdit(false);\r\n        this.setState({ name: this.props.model.name });\r\n        break;\r\n      // no default\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n      <Event\r\n        {...this.props}\r\n        isEditing={this.state.isEditing}\r\n        name={this.state.name}\r\n        toggleEdit={this.toggleEdit}\r\n        refreshName={this.refreshName}\r\n        handleKeyPress={this.handleKeyPress}\r\n        handleRef={this.handleRef}\r\n      />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventComponent;\r\n","import Task from './task/component';\r\nimport taskIcon from './task/icon';\r\nimport Event from './event/component';\r\nimport eventIcon from './event/icon';\r\n\r\nconst config = {\r\n  entityTypes: {\r\n    Task: {\r\n      width: 125,\r\n      height: 75,\r\n    },\r\n    Event: {\r\n      width: 50,\r\n      height: 50,\r\n    },\r\n  },\r\n  gridSize: 25,\r\n};\r\n\r\nconst customEntities = {\r\n  Task: {\r\n    component: Task,\r\n    icon: taskIcon,\r\n  },\r\n  Event: {\r\n    component: Event,\r\n    icon: eventIcon,\r\n  },\r\n};\r\n\r\nexport { config, customEntities };\r\n","// @flow\r\n\r\nimport React from 'react';\r\n\r\nconst icon = {\r\n  path: <path d=\"M8 0C3.6 0 0 3.6 0 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8z\" />,\r\n  size: 16,\r\n};\r\n\r\nexport default icon;\r\n","import React from 'react';\r\nimport {\r\n  Diagram,\r\n  store as diagramStore,\r\n  setEntities,\r\n  setConfig,\r\n  diagramOn,\r\n} from 'react-flow-diagram';\r\nimport model from './model-example';\r\nimport { config, customEntities } from './config-example';\r\n\r\nclass CustomDiagram extends React.PureComponent {\r\n  componentWillMount() {\r\n    diagramStore.dispatch(setConfig(config));\r\n    diagramStore.dispatch(setEntities(model));\r\n\r\n    diagramOn('anyChange', entityState =>\r\n      // You can get the model back\r\n      // after modifying the UI representation\r\n      console.info(entityState)\r\n    );\r\n  }\r\n  render() {\r\n    return <Diagram customEntities={customEntities} />;\r\n  }\r\n}\r\n\r\nexport default CustomDiagram;\r\n","import React, { Component } from 'react';\r\nimport CustomDiagram from './CustomDiagram';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n        </header>\r\n\r\n        <main className=\"main\">\r\n          <CustomDiagram />\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}